name: WSDL to Kong Deployment with soap-converter

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  convert-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # Install Deck using official action
      - name: Setup decK
        uses: kong/setup-deck@v1
        with:
          version: "1.40.2"

      - name: Install soap-converter
        run: |
          npm install -g soap-converter@0.2.1

      - name: Convert WSDL to OpenAPI
        run: |
          soap-converter \
            --input ./wsdl/tgropweb_ROPWebServicesService_ROPRealTimeServicesService_ROPRealTimeServicesService.wsdl \
            --target SwaggerYAML \
            --output swagger.yaml

      - name: Install swagger2openapi
        run: npm install -g swagger2openapi

      - name: Convert swagger to openapi
        run: swagger2openapi --yaml --outfile openapi.yaml swagger.yaml

      # Add server URL from WSDL to OpenAPI spec
      - name: Update OpenAPI server URL
        run: |
          chmod +x ./cicd-inject/inject-host.sh
          ./cicd-inject/inject-host.sh ./wsdl/tgropweb_ROPWebServicesService_ROPRealTimeServicesService_ROPRealTimeServicesService.wsdl

      # Convert OpenAPI specs to DecK
      - name: Generate Kong declarative configuration from Spec
        run: deck file openapi2kong --spec ./openapi.yaml --output-file ./kong.yaml --select-tag gitops

      - name: Add custom plugin + basic auth plugin
        run: deck file add-plugins -s ./kong.yaml ./kong-config/plugins/plugins-inject.yaml

      - name: Validate Kong config
        run: |
          deck validate -s kong.yaml

      - name: Deploy to Kong Gateway
        run: |
          deck gateway sync ./kong.yaml --konnect-addr https://us.api.konghq.com --konnect-token $KONG_KONNECT_TOKEN --konnect-control-plane-name thai-airways-poc --select-tag gitops
        env:
          KONG_KONNECT_TOKEN: ${{ secrets.KONG_KONNECT_TOKEN }}
